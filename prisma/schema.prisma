// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Enhance your student communication platform with Prisma's efficient data handling.
// For more information on how Prisma can accelerate your application, visit: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// User model represents a student or participant in the communication platform.
model User {
  id       Int       @id @default(autoincrement())
  email    String    @unique
  name     String
  password String
  avatar   String
  chats    Chat[]    @relation("UserChats") // List of chats the user is part of.
  messages Message[] @relation("UserMessages") // Messages sent by the user.
}

// Chat model represents a conversation between two or more users.
model Chat {
  id       Int       @id @default(autoincrement())
  users    User[]    @relation("UserChats") // Users participating in the chat.
  messages Message[] // Messages exchanged in the chat.
}

// Message model represents a single message in a chat, which can be text, image, or document.
model Message {
  id        Int      @id @default(autoincrement())
  content   String   // Text content of the message.
  createdAt DateTime @default(now()) // Timestamp when the message was created.
  chatId    Int
  chat      Chat     @relation(fields: [chatId], references: [id]) // Chat to which the message belongs.
  userId    Int
  user      User     @relation("UserMessages", fields: [userId], references: [id]) // User who sent the message.
  image     String?  // Optional URL to an image included in the message.
  document  String?  // Optional URL to a document included in the message.
}
